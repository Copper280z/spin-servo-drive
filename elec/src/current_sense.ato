#ato view --root-file current_sense.ato --root-node current_sense.ato:CurrentSense

import LMV321IDBVR from "LMV321IDBVR.ato"
import Resistor from "std/resistor.ato"
import Capacitor from "std/capacitor.ato"
import Vdiv from "vdiv.ato"
import LowPass  from "low_pass.ato"
import nettie_250u from "nettie.ato"

# This file impliments a lowside shunt-based current sense
# The largest readily available 42mm-frame motors have a rated current of ~8A
# Burst current is ~3x rated, which means we want to ideally support ~24A
# Aim for constant power rating on shunt resistor to match constant rating of motor (8A)
# Shunt Resistor Voltage: Using Ohm's law, the maximum voltage across a 3mÎ© shunt resistor at 24A is 0.072V.
# Amplifier Gain: To map this to the ADC's maximum measurable voltage of 3.3V, we calculate the required gain to be 45.8.

module CurrentSense:
    signal vcc
    signal gnd
    signal i_in
    signal i_out
    signal out
    signal v_ref

    # Use C2681063 for 2010 1.0W
    # or C128540 for 0805 0.5W (3x overload rated, probably okay..)
    shunt = new Resistor
    shunt.value = "3mOhm"
    shunt.footprint = "Resistor_SMD:R_0805_2012Metric"
    i_in ~ shunt.p1
    shunt.p2 ~ i_out
    nt_p = new nettie_250u
    nt_p.p2 ~ i_in
    nt_n = new nettie_250u
    nt_n.p2 ~ i_out
    opamp = new LMV321IDBVR
    opamp.vcc ~ vcc
    opamp.gnd ~ gnd

    # feedback
    feedback_div = new Vdiv
    feedback_div.input ~ nt_n.p1
    feedback_div.gnd ~ opamp.out
    feedback_div.output ~ opamp.in_n
    feedback_div.r_top.value = "1k"
    feedback_div.r_bt.value = "45k"

    bias_div = new Vdiv
    bias_div.input ~ nt_p.p1
    bias_div.gnd ~ v_ref
    bias_div.output ~ opamp.in_p
    bias_div.r_top.value = "1k"
    bias_div.r_bt.value = "45k"

    # output filter - cutoff at 1.3MHz
    output_filter = new LowPass
    output_filter.in ~ opamp.out
    output_filter.out ~ out
    output_filter.gnd ~ gnd
    output_filter.c.value = "2200pf"
    output_filter.r.value = "56R"